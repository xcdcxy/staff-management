<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入db.properties -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 配置C3P0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

  
    
    <!-- 配置DAO的类 -->
	<bean id="accountDao" class="com.test.spring.demo3.AccountDaoImpl"></bean>
    <!-- 配置业务层类 -->
	<bean id="accountService" class="com.test.spring.demo3.AccountServiceImpl"></bean>
	<!-- 配置 Spring 的 jdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 配置事务管理器 -->
	<bean id="transactionManager" 
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入连接池对象 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置事务的通知：(事务的增强) -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 
				propagation	:事务传播行为
				isolation	:事务隔离级别
				read-only	:只读
				rollback-for:发生哪些异常回滚
				no-rollback-for:发生哪些异常不回滚
				timeout		:过期信息
			 -->
			<tx:method name="transfer*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置切面 -->
	<aop:config>
		<!-- 配置切入点 -->
		<!-- 第一个*：任意返回值，+：AccountService所有子类，*任意的方法，(..)任意的参数 -->
		<aop:pointcut expression="execution(* com.test.spring.demo3.AccountService+.*(..))" id="pointcut1"/>
		<!-- 切面 -->
		<!-- advisor只配置1个切点,aspect配置多切点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>
	</aop:config>
	<!-- 注解扫描 -->
    <context:component-scan base-package="com.test.spring"/>

  

</beans>